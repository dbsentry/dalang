#############################################################################
#                       Confidentiality Information                         #
#                                                                           #
# This module is the confidential and proprietary information of            #
# DBSentry Corp.; it is not to be copied, reproduced, or transmitted in any #
# form, by any means, in whole or in part, nor is it to be used for any     #
# purpose other than that for which it is expressly provided without the    #
# written permission of DBSentry Corp.                                      #
#                                                                           #
# Copyright (c) 2020-2021 DBSentry Corp.  All Rights Reserved.              #
#                                                                           #
#############################################################################
# iac-bootstrap.yml
#   Playbook to bootstrap IaC setup using Ansible and Terraform. 
#    - Create encrypted S3 backend and Dynamodb table
#    - Move tfstate to S3
#    - Create TerraformUser for Org account
#    - Create terraform role for each target environment
#############################################################################
- name: Bootstrap Terraform AWS Backend and setup environment
  hosts: all
  connection: local
  gather_facts: no
  vars:
    aws_account_name: "{{ group_names[0] }}"
    aws_account_name_list: "{{ groups.keys()  | reject('match', 'all') | reject('match', 'ungrouped') }}"
    tf_target_state: "present"
    backend_vars: 
      terraform_backend_config_file_path: '.'
      force_destroy: 'false'

  pre_tasks:
  - name: Read Secret Variable
    include_vars:
      file: aws-secrets.yml
      name: aws_secret_vars
    tags:
      - always
  - name: Set Variables
    set_fact:
      aws_access_key_id: "{{ aws_secret_vars[aws_account_name + '_aws_access_key_id'] }}"
      aws_secret_access_key: "{{ aws_secret_vars[aws_account_name + '_aws_secret_access_key'] }}"
      aws_default_region: "{{ aws_secret_vars[aws_account_name + '_aws_default_region'] }}"
      tf_bucket: "{{ all_vars.tfstate_namespace + '-' + aws_account_name + '-' + all_vars.tfstate_name + '-state'}}"
      tf_dynamodb_table: "{{ all_vars.tfstate_namespace + '-' + aws_account_name + '-' + all_vars.tfstate_name + '-state-lock'}}"
    tags:
      - always

  roles:
   - { role: boot-tf-backend, secrets: "{{ aws_secret_vars }}"  }
   - { role: boot-tf-user, secrets: "{{ aws_secret_vars }}"  }
   - { role: boot-tf-role, secrets: "{{ aws_secret_vars }}"  }

