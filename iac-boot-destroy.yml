#############################################################################
# Copyright (c) 2020-2021 DBSentry Corp.  All Rights Reserved.              #
#                                                                           #
# Licensed under the Apache License, Version 2.0 (the "License");           #
# you may not use this file except in compliance with the License.          #
# You may obtain a copy of the License at                                   #
#                                                                           #
#      http://www.apache.org/licenses/LICENSE-2.0                           #
#                                                                           #
# Unless required by applicable law or agreed to in writing, software       #
# distributed under the License is distributed on an "AS IS" BASIS,         #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  #
# See the License for the specific language governing permissions and       #
# limitations under the License.                                            #
#                                                                           #
#############################################################################
# iac-boot-destroy.yml
#   Playbook to destroy all terraform artifacts:
#    - Deletes Terraform Role
#    - Deletes TerraformUser (for org account)
#    - Unconfigures S3 backend 
#    - Deletes S3 backend
#############################################################################
- name: Destroy Terraform AWS Backend
  hosts: all
  connection: local
  gather_facts: no
  vars:
    aws_account_name: "{{ group_names[0] }}"
    aws_account_name_list: "{{ groups.keys()  | reject('match', 'all') | reject('match', 'ungrouped') }}"
    tf_target_state: "absent"
    backend_vars: 
      terraform_backend_config_file_path: ''
      force_destroy: 'true'

  pre_tasks:
  - name: Read Secret Variable
    include_vars:
      file: aws-secrets.yml
      name: aws_secret_vars
    tags:
      - always
  - name: Set Variables
    set_fact:
      aws_access_key_id: "{{ aws_secret_vars[aws_account_name + '_aws_access_key_id'] }}"
      aws_secret_access_key: "{{ aws_secret_vars[aws_account_name + '_aws_secret_access_key'] }}"
      aws_default_region: "{{ aws_secret_vars[aws_account_name + '_aws_default_region'] }}"
      tf_bucket: "{{ all_vars.tfstate_namespace + '-' + aws_account_name + '-' + all_vars.tfstate_name + '-state'}}"
      tf_dynamodb_table: "{{ all_vars.tfstate_namespace + '-' + aws_account_name + '-' + all_vars.tfstate_name + '-state-lock'}}"
    tags:
      - always

  roles:
   - { role: boot-tf-role, secrets: "{{ aws_secret_vars }}"  }
   - { role: boot-tf-user, secrets: "{{ aws_secret_vars }}"  }
   - { role: boot-tf-backend, secrets: "{{ aws_secret_vars }}"  }
